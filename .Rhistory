find_max_cor_beta_2 <- function(data, find_sd = FALSE){
covs <- ncol(data) - 1
ss <- nrow(data)
s.data <- data - rep(colMeans(data), each = ss)
s.data <- s.data / rep(sqrt(colSums(s.data^2)), each = ss)
cors <- crossprod(s.data[, -1], s.data[, 1])
max.k <- which.max(abs(cors)) + 1
if(find_sd == TRUE){
TX <- rbind(1, data[, max.k])
X <- t(TX)
XTXinv <- solve(TX %*% X)
betas <- XTXinv %*% TX %*% y.vec
rse <- sum((y.vec - as.numeric(X %*% betas))^2)/(ss - 2)
est <- c(betas[2], betas[2]/sqrt(XTXinv[2, 2] * rse))
}else{
est <- cors[max.k - 1] / sd(data[, max.k])
}
return(est)
}
ss <- matrix(c(1, 2, 3, 4), nrow = 2)
ss
ss - c(1, 2)
sweep(ss, 2, "-")
sweep(ss, 2, FUN = "-")
sweep(ss, 2, STATS = "-")
sweep(ss, 2, STATS = "-", c(1, 2))
rowMeans(cc)
rowMeans(ss)
colMeans(ss)
ss - colMeans(ss)
t(ss - rowMeans(ss))
ss
ss - rowMeans(ss)
ss <- matrix(c(1, -1, 3, 7), nrow = 2)
ss
ss - rowMeans(ss)
t(t(ss) - colMeans(ss))
for(i in 1:100000){
t(t(ss) - colMeans(ss))
}
for(i in 1:100000){
ss - rep(colMeans(ss), each = 2)
}
for(i in 1:1000000){
ss - rep(colMeans(ss), each = 2)
}
for(i in 1:1000000){
t(t(ss) - colMeans(ss))
}
ss <- matrix(1:6, ncol = 2)
for(i in 1:10000){
ss - rep(colMeans(ss), each = 2)
}
warnings
warnings()
for(i in 1:10000){
ss - rep(colMeans(ss), each = 3)
}
for(i in 1:10000){
ss - rep(colMeans(ss), each = 3)
}
colSums(ss)
calc_bbv <- function(boot_data, data, boot_resids, resids){
covs <- ncol(data) - 1
ss <- length(resids)
mean_cent <- rep(colMeans(boot_data), each = ss)
c_data      <- data - mean_cent
c_data_boot <- boot_data - mean_cent
z_nk <- (crossprod(c_data_boot, boot_resids) - crossprod(c_data, resids))/ss
var_k <- colSums(c_data_boot^2)/(ss - 1)
max_k <- which.max(z_nk^2/var_k)
max_z <- z_nk[max_k]/var_k[max_k]
}
dd <- mvrnorm(n = 100, mu = rep(0, 20), Sigma = diag(20))
library(MASS)
dd <- mvrnorm(n = 100, mu = rep(0, 20), Sigma = diag(20))
lm(dd[, 3] ~ dd[, c(2, 4, 5)])
bb <- lm(dd[, 3] ~ dd[, c(2, 4, 5)])
bb$residuals
resids <- bb$residuals
boot.indx <- sample(1:100, replace = TRUE)
length(unique(boot.indx))
boot.indx <- sample(1:100, replace = TRUE)
length(unique(boot.indx))
boot.indx <- sample(1:100, replace = TRUE)
length(unique(boot.indx))
calc_bbv(dd[boot.indx, ], dd, resids[boot.indx, ], resids)
calc_bbv(dd[boot.indx, ], dd, resids[boot.indx ], resids)
calc_bbv <- function(boot_data, data, boot_resids, resids){
covs <- ncol(data) - 1
ss <- length(resids)
mean_cent <- rep(colMeans(boot_data), each = ss)
c_data      <- data - mean_cent
c_data_boot <- boot_data - mean_cent
z_nk <- (crossprod(c_data_boot, boot_resids) - crossprod(c_data, resids))/ss
var_k <- colSums(c_data_boot^2)/(ss - 1)
max_k <- which.max(z_nk^2/var_k)
max_z <- z_nk[max_k]/var_k[max_k]
return(max_z)
}
calc_bbv(dd[boot.indx, ], dd, resids[boot.indx ], resids)
calc_bbv(dd[boot.indx, ], dd, resids[boot.indx ], resids)
calc_bbv(dd[boot.indx, ], dd, resids[boot.indx ], resids)
dd <- mvrnorm(n = 100, mu = rep(0, 20), Sigma = diag(20))
resids <- lm(dd[, 3] ~ dd[, c(2, 4, 5)])$residuals
calc_bbv(dd[boot.indx, ], dd, resids[boot.indx ], resids)
dd <- mvrnorm(n = 100, mu = rep(0, 20), Sigma = diag(20))
resids <- lm(dd[, 3] ~ dd[, c(2, 4, 5)])$residuals
calc_bbv(dd[boot.indx, ], dd, resids[boot.indx ], resids)
distr <- rep(NA, 1000)
for(i in 1:1000){
dd <- mvrnorm(n = 100, mu = rep(0, 20), Sigma = diag(20))
resids <- lm(dd[, 3] ~ dd[, c(2, 4, 5)])$residuals
boot.indx <- sample(1:100, replace = TRUE)
distr[i] <- calc_bbv(dd[boot.indx, ], dd, resids[boot.indx ], resids)
}
hist(distr)
for(i in 1:1000){
dd <- mvrnorm(n = 100, mu = rep(0, 20), Sigma = diag(20))
y <- rnorm(100)
resids <- lm(y ~ dd)$residuals
boot.indx <- sample(1:100, replace = TRUE)
distr[i] <- calc_bbv(dd[boot.indx, ], dd, resids[boot.indx ], resids)
}
hist(distr)
distr <- rep(NA, 10000)
for(i in 1:10000){
dd <- mvrnorm(n = 100, mu = rep(0, 20), Sigma = diag(20))
y <- rnorm(100)
resids <- lm(y ~ dd)$residuals
boot.indx <- sample(1:100, replace = TRUE)
distr[i] <- calc_bbv(dd[boot.indx, ], dd, resids[boot.indx ], resids)
}
hist(distr)
for(i in 1:10000){
dd <- mvrnorm(n = 100, mu = rep(0, 20), Sigma = diag(20) + 0.1)
y <- rnorm(100)
resids <- lm(y ~ dd)$residuals
boot.indx <- sample(1:100, replace = TRUE)
distr[i] <- calc_bbv(dd[boot.indx, ], dd, resids[boot.indx ], resids)
}
hist(distr)
